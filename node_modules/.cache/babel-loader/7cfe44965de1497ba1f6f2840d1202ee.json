{"ast":null,"code":"import _classCallCheck from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Code\\\\531app\\\\src\\\\Components\\\\WarmupC.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { Row, Col } from 'reactstrap';\n\nvar WarmupC =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WarmupC, _Component);\n\n  function WarmupC() {\n    _classCallCheck(this, WarmupC);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(WarmupC).apply(this, arguments));\n  }\n\n  _createClass(WarmupC, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          weight = _this$props.weight,\n          bar = _this$props.bar,\n          isToggle = _this$props.isToggle;\n      var toggle = {\n        display: isToggle ? 'block' : 'none'\n      };\n      var rowCollapse;\n\n      if (isToggle) {\n        rowCollapse = \"row\";\n      } else {\n        rowCollapse = \"Row-Collapse\";\n      }\n\n      function round(num) {\n        return Math.round(num * 2) / 2;\n      }\n\n      return React.createElement(Row, {\n        className: rowCollapse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Col, {\n        style: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"C\"), React.createElement(Col, {\n        style: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"60\"), React.createElement(Col, {\n        style: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"3\"), React.createElement(Col, {\n        style: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, round(weight * 6 / 10).toFixed(1)), React.createElement(Col, {\n        style: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, Math.max(0, round(weight * 6 / 10) - bar).toFixed(1)));\n    }\n  }]);\n\n  return WarmupC;\n}(Component);\n\nexport default WarmupC;","map":{"version":3,"sources":["C:\\Code\\531app\\src\\Components\\WarmupC.js"],"names":["React","Component","Row","Col","WarmupC","props","weight","bar","isToggle","toggle","display","rowCollapse","round","num","Math","toFixed","max"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;;IAEMC,O;;;;;;;;;;;;;6BACO;AAAA,wBAC6B,KAAKC,KADlC;AAAA,UACGC,MADH,eACGA,MADH;AAAA,UACWC,GADX,eACWA,GADX;AAAA,UACgBC,QADhB,eACgBA,QADhB;AAEL,UAAIC,MAAM,GAAG;AAACC,QAAAA,OAAO,EAAEF,QAAQ,GAAE,OAAF,GAAY;AAA9B,OAAb;AACA,UAAIG,WAAJ;;AACA,UAAIH,QAAJ,EAAc;AACVG,QAAAA,WAAW,GAAG,KAAd;AACH,OAFD,MAEO;AACHA,QAAAA,WAAW,GAAG,cAAd;AACH;;AACD,eAASC,KAAT,CAAeC,GAAf,EAAoB;AAChB,eAAOC,IAAI,CAACF,KAAL,CAAWC,GAAG,GAAC,CAAf,IAAkB,CAAzB;AACH;;AACD,aACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAEF,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAEF,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAEA,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAEA,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAEA,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBG,KAAK,CAACN,MAAM,GAAC,CAAP,GAAS,EAAV,CAAN,CAAqBS,OAArB,CAA6B,CAA7B,CAArB,CAJJ,EAKI,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAEN,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBK,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYJ,KAAK,CAACN,MAAM,GAAC,CAAP,GAAS,EAAV,CAAN,GAAqBC,GAAhC,CAAD,CAAuCQ,OAAvC,CAA+C,CAA/C,CAArB,CALJ,CADJ;AASH;;;;EAtBiBd,S;;AAyBtB,eAAeG,OAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nclass WarmupC extends Component {\r\n    render() {\r\n        const { weight, bar, isToggle } = this.props;\r\n        let toggle = {display: isToggle? 'block' : 'none'}\r\n        let rowCollapse; \r\n        if (isToggle) {\r\n            rowCollapse = \"row\"\r\n        } else {\r\n            rowCollapse = \"Row-Collapse\"\r\n        }\r\n        function round(num) {\r\n            return Math.round(num*2)/2;\r\n        }    \r\n        return (\r\n            <Row className={rowCollapse}>\r\n                <Col style={toggle}>C</Col>\r\n                <Col style={toggle}>60</Col>\r\n                <Col style={toggle}>3</Col>\r\n                <Col style={toggle}>{(round(weight*6/10)).toFixed(1)}</Col>\r\n                <Col style={toggle}>{(Math.max(0,(round(weight*6/10))-bar)).toFixed(1)}</Col>        \r\n            </Row>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default WarmupC;"]},"metadata":{},"sourceType":"module"}