{"ast":null,"code":"import _classCallCheck from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Code\\\\531app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Code\\\\531app\\\\src\\\\Components\\\\bench.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nvar Bench =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Bench, _Component);\n\n  function Bench(props) {\n    var _this;\n\n    _classCallCheck(this, Bench);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Bench).call(this, props));\n    _this.state = {\n      value: [],\n      isToggle: false,\n      isKilos: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.warmupClick = _this.warmupClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isKilos = _this.isKilos.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Bench, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      e.preventDefault();\n      this.setState({\n        value: e.target.value\n      });\n    }\n  }, {\n    key: \"warmupClick\",\n    value: function warmupClick(e) {\n      this.setState({\n        isToggle: !this.state.isToggle\n      });\n    }\n  }, {\n    key: \"isKilos\",\n    value: function isKilos(e) {\n      this.setState({\n        isKilos: !this.state.isKilos\n      });\n\n      if (this.state.isKilos === false) {\n        this.setState({\n          value: Math.round(e.target.value / 0.45359237, 2)\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var weight = this.state.value;\n      var rep1, rep2, rep3;\n      var pc1, pc2, pc3;\n      var cycle;\n      var mass = !this.state.isKilos ? 'Kg' : 'Lb';\n\n      if (this.state.isKilos === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Bench:\", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: this.isKilos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, mass), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.state.value)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"btn btn-primary\",\n          onClick: this.warmupClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Warm up\"), React.createElement(\"div\", {\n          className: \"container\",\n          style: {\n            display: this.state.isToggle ? 'block' : 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"40% Set 1 x 5 : \", weight * 4 / 10, mass), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"50% Set 2 x 5 : \", weight * 5 / 10, mass), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"60% Set 3 x 3 : \", weight * 6 / 10, mass))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, pc1, \"%: \", rep1, \"x \", weight * pc1 / 100, mass), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, pc2, \"%: \", rep2, \"x \", weight * pc2 / 100, mass), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, pc3, \"%: \", rep3, \"x+ \", weight * pc3 / 100, mass));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \"Bench:\", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          onChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: this.isKilos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, mass), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, this.state.value / 0.45359237)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"btn btn-primary\",\n          onClick: this.warmupClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Warm up\"), React.createElement(\"div\", {\n          className: \"container\",\n          style: {\n            display: this.state.isToggle ? 'block' : 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"40% Set 1 x 5 : \", weight * 4 / 10, mass), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"50% Set 2 x 5 : \", weight * 5 / 10, mass), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"60% Set 3 x 3 : \", weight * 6 / 10, mass))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, pc1, \"%: \", rep1, \"x \", weight * pc1 / 100, mass), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, pc2, \"%: \", rep2, \"x \", weight * pc2 / 100, mass), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, pc3, \"%: \", rep3, \"x+ \", weight * pc3 / 100, mass));\n      }\n    }\n  }]);\n\n  return Bench;\n}(Component);\n\nexport default Bench;","map":{"version":3,"sources":["C:\\Code\\531app\\src\\Components\\bench.js"],"names":["React","Component","Button","Bench","props","state","value","isToggle","isKilos","handleChange","bind","warmupClick","e","preventDefault","setState","target","Math","round","weight","rep1","rep2","rep3","pc1","pc2","pc3","cycle","mass","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nclass Bench extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: [],\r\n            isToggle: false,\r\n            isKilos: false,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.warmupClick = this.warmupClick.bind(this);\r\n        this.isKilos = this.isKilos.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            value: e.target.value,\r\n        })\r\n    }   \r\n\r\n    warmupClick(e) {\r\n        this.setState({\r\n            isToggle: !this.state.isToggle,\r\n        })\r\n    }\r\n\r\n    isKilos(e) {\r\n       this.setState({\r\n           isKilos: !this.state.isKilos,\r\n       })\r\n\r\n       if (this.state.isKilos === false) {\r\n           this.setState({\r\n               value: Math.round(e.target.value / 0.45359237,2),\r\n           }) \r\n       }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        let weight = this.state.value;\r\n        let rep1, rep2, rep3;\r\n        let pc1, pc2, pc3;\r\n        let cycle;\r\n        let mass = !this.state.isKilos ? 'Kg' : 'Lb';\r\n\r\n        if (this.state.isKilos === true) {\r\n            return (\r\n                <div>\r\n                    Bench: \r\n                    <span>\r\n                        <input onChange={this.handleChange}></input>\r\n                        <Button onClick={this.isKilos}>{mass}</Button>\r\n                        <p>{this.state.value}</p>\r\n                    </span>\r\n                    <div>\r\n                        <Button className=\"btn btn-primary\"\r\n                                onClick={this.warmupClick}>\r\n                                Warm up\r\n                        </Button>\r\n                        <div className='container'\r\n                             style={{display: this.state.isToggle ? 'block' : 'none'}} \r\n                             >\r\n                            <div>40% Set 1 x 5 : {weight*4/10}{mass}</div>\r\n                            <div>50% Set 2 x 5 : {weight*5/10}{mass}</div>\r\n                            <div>60% Set 3 x 3 : {weight*6/10}{mass}</div>\r\n                        </div>\r\n                    </div>\r\n    \r\n                    <div>{pc1}%: {rep1}x {weight*pc1/100}{mass}</div>\r\n                    <div>{pc2}%: {rep2}x {weight*pc2/100}{mass}</div>\r\n                    <div>{pc3}%: {rep3}x+ {weight*pc3/100}{mass}</div>\r\n    \r\n                </div>\r\n            )\r\n            \r\n            } else {\r\n                return (\r\n                    <div>\r\n                        Bench: \r\n                        <span>\r\n                            <input onChange={this.handleChange}></input>\r\n                            <Button onClick={this.isKilos}>{mass}</Button>\r\n                            <p>{this.state.value / 0.45359237}</p>\r\n                        </span>\r\n                        <div>\r\n                            <Button className=\"btn btn-primary\"\r\n                                    onClick={this.warmupClick}>\r\n                                    Warm up\r\n                            </Button>\r\n                            <div className='container'\r\n                                 style={{display: this.state.isToggle ? 'block' : 'none'}} \r\n                                 >\r\n                                <div>40% Set 1 x 5 : {weight*4/10}{mass}</div>\r\n                                <div>50% Set 2 x 5 : {weight*5/10}{mass}</div>\r\n                                <div>60% Set 3 x 3 : {weight*6/10}{mass}</div>\r\n                            </div>\r\n                        </div>\r\n        \r\n                        <div>{pc1}%: {rep1}x {weight*pc1/100}{mass}</div>\r\n                        <div>{pc2}%: {rep2}x {weight*pc2/100}{mass}</div>\r\n                        <div>{pc3}%: {rep3}x+ {weight*pc3/100}{mass}</div>\r\n        \r\n                    </div>\r\n                )\r\n            }\r\n    }\r\n}\r\n\r\nexport default Bench"]},"metadata":{},"sourceType":"module"}